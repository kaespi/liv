name: Linux Build

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
    - 'main'

defaults:
  run:
    shell: bash

permissions:
  checks: write
  contents: write
  statuses: write

env:
  BUILD_DIR:    ${{ github.workspace }}/build
  QT_VERSION:   6.2.*

jobs:
  build:
    runs-on:  ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          host:         linux
          target:       desktop
          arch:         gcc_64
          dir:          ${{ runner.temp }}
          setup-python: false

      - name: Create build directory
        run:  mkdir -p ${{ env.BUILD_DIR }}

      - name: Build
        working-directory: ${{ env.BUILD_DIR }}
        run:  |
              cmake -DRUN_CLANG_TIDY=ON -S ..
              cmake --build .

      - name: Unittests
        working-directory: ${{ env.BUILD_DIR }}
        run: ctest -C Debug --output-on-failure --verbose

      - name: Unittests Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Backend unittests
          working-directory: ${{ env.BUILD_DIR }}
          path: src/backend/unittests.xml
          reporter: java-junit

      - name: Prepare artifacts
        working-directory: ${{ env.BUILD_DIR }}
        run:  |
              mv src/liv .
              tar -cvf liv.tar liv

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux executable
          path: ${{ env.BUILD_DIR }}/liv.tar
